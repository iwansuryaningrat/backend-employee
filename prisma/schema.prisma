// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  name           String?
  username       String           @unique
  role           Role             @default(employee)
  password       String
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  Employees      Employees?
  Attendances    Attendances[]
  Overtimes      Overtimes[]
  Reimbursements Reimbursements[]
  Payslips       Payslips[]
}

model Employees {
  id         Int      @id @default(autoincrement())
  userId     Int      @unique
  user       Users    @relation(fields: [userId], references: [id])
  position   String
  department String
  salary     Float
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}

model Attendances {
  id         Int              @id @default(autoincrement())
  userId     Int
  user       Users            @relation(fields: [userId], references: [id])
  date       String
  status     AttendanceStatus @default(present)
  checkIn    DateTime?        @db.Timestamptz(6)
  checkOut   DateTime?        @db.Timestamptz(6)
  created_at DateTime         @default(now()) @db.Timestamptz(6)
  updated_at DateTime         @default(now()) @db.Timestamptz(6)
}

model Overtimes {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       Users    @relation(fields: [userId], references: [id])
  date       String
  hours      Float
  amount     Float?
  reason     String?
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
}

model Reimbursements {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        Users    @relation(fields: [userId], references: [id])
  amount      Float
  description String
  link        String?
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
}

model Payslips {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        Users    @relation(fields: [userId], references: [id])
  month       String
  year        Int
  takeHomePay Int
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  updated_at  DateTime @default(now()) @db.Timestamptz(6)
}

enum Role {
  admin
  employee
}

enum AttendanceStatus {
  present
  absent
  leave
  late
}
